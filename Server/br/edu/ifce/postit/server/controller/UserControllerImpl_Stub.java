// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package br.edu.ifce.postit.server.controller;

public final class UserControllerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements br.edu.ifce.postit.server.controller.UserController, java.rmi.Remote
{
    private static final java.rmi.server.Operation[] operations = {
	new java.rmi.server.Operation("void createUser(br.edu.ifce.postit.server.model.User)"),
	new java.rmi.server.Operation("void deleteUser(br.edu.ifce.postit.server.model.User)"),
	new java.rmi.server.Operation("br.edu.ifce.postit.server.model.User findUserByLoginAndPassword(java.lang.String, java.lang.String)"),
	new java.rmi.server.Operation("boolean login(java.lang.String, java.lang.String)")
    };
    
    private static final long interfaceHash = 2458198269383853792L;
    
    private static final long serialVersionUID = 2;
    
    private static boolean useNewInvoke;
    private static java.lang.reflect.Method $method_createUser_0;
    private static java.lang.reflect.Method $method_deleteUser_1;
    private static java.lang.reflect.Method $method_findUserByLoginAndPassword_2;
    private static java.lang.reflect.Method $method_login_3;
    
    static {
	try {
	    java.rmi.server.RemoteRef.class.getMethod("invoke",
		new java.lang.Class[] {
		    java.rmi.Remote.class,
		    java.lang.reflect.Method.class,
		    java.lang.Object[].class,
		    long.class
		});
	    useNewInvoke = true;
	    $method_createUser_0 = br.edu.ifce.postit.server.controller.UserController.class.getMethod("createUser", new java.lang.Class[] {br.edu.ifce.postit.server.model.User.class});
	    $method_deleteUser_1 = br.edu.ifce.postit.server.controller.UserController.class.getMethod("deleteUser", new java.lang.Class[] {br.edu.ifce.postit.server.model.User.class});
	    $method_findUserByLoginAndPassword_2 = br.edu.ifce.postit.server.controller.UserController.class.getMethod("findUserByLoginAndPassword", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	    $method_login_3 = br.edu.ifce.postit.server.controller.UserController.class.getMethod("login", new java.lang.Class[] {java.lang.String.class, java.lang.String.class});
	} catch (java.lang.NoSuchMethodException e) {
	    useNewInvoke = false;
	}
    }
    
    // constructors
    public UserControllerImpl_Stub() {
	super();
    }
    public UserControllerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of createUser(User)
    public void createUser(br.edu.ifce.postit.server.model.User $param_User_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_createUser_0, new java.lang.Object[] {$param_User_1}, -6224210531336210335L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 0, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_User_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of deleteUser(User)
    public void deleteUser(br.edu.ifce.postit.server.model.User $param_User_1)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		ref.invoke(this, $method_deleteUser_1, new java.lang.Object[] {$param_User_1}, -4577516996290843684L);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 1, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_User_1);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		ref.done(call);
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of findUserByLoginAndPassword(String, String)
    public br.edu.ifce.postit.server.model.User findUserByLoginAndPassword(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_findUserByLoginAndPassword_2, new java.lang.Object[] {$param_String_1, $param_String_2}, 762351086782683544L);
		return ((br.edu.ifce.postit.server.model.User) $result);
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 2, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		br.edu.ifce.postit.server.model.User $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = (br.edu.ifce.postit.server.model.User) in.readObject();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} catch (java.lang.ClassNotFoundException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of login(String, String)
    public boolean login(java.lang.String $param_String_1, java.lang.String $param_String_2)
	throws java.rmi.RemoteException
    {
	try {
	    if (useNewInvoke) {
		Object $result = ref.invoke(this, $method_login_3, new java.lang.Object[] {$param_String_1, $param_String_2}, -3488153054972647034L);
		return ((java.lang.Boolean) $result).booleanValue();
	    } else {
		java.rmi.server.RemoteCall call = ref.newCall((java.rmi.server.RemoteObject) this, operations, 3, interfaceHash);
		try {
		    java.io.ObjectOutput out = call.getOutputStream();
		    out.writeObject($param_String_1);
		    out.writeObject($param_String_2);
		} catch (java.io.IOException e) {
		    throw new java.rmi.MarshalException("error marshalling arguments", e);
		}
		ref.invoke(call);
		boolean $result;
		try {
		    java.io.ObjectInput in = call.getInputStream();
		    $result = in.readBoolean();
		} catch (java.io.IOException e) {
		    throw new java.rmi.UnmarshalException("error unmarshalling return", e);
		} finally {
		    ref.done(call);
		}
		return $result;
	    }
	} catch (java.lang.RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (java.lang.Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
